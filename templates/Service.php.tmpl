<?php
namespace SEOshop\BusinessLogic\<COMPONENT>\Service;

use <MODELCLASS>;
use <MODELCLASS>Collection;
use Repository\Contract\<MODELCLASS>RepositoryInterface;
use SEOshop\Backend\Routing\StrongParametersInterface;
use Psr\Log\LoggerInterface;
use SEOshop\BusinessLogic\Core\Concept\ServiceAbstract;

/**
 * Class <MODELCLASS>Service
 *
 * @property LoggerInterface               $logger
 * @property <MODELCLASS>RepositoryInterface $repository The repository handled by this service
 *
 * @method <MODELCLASS> getModel()
 * @method <MODELCLASS>Collection|<MODELCLASS>[] find()
 * @method <MODELCLASS> findOne()
 * @method <MODELCLASS> findOneById($id)
 * @method <MODELCLASS> create(StrongParametersInterface $attributes)
 * @method <MODELCLASS> update(<MODELCLASS> $model, StrongParametersInterface $attributes)
 * @method <MODELCLASS> updateById($id, StrongParametersInterface $attributes)
 * @method <MODELCLASS> delete(<MODELCLASS> $model)
 * @method <MODELCLASS> deleteById($id)
 *
 * @package <COMPONENT>
 */
class <MODELCLASS>Service extends ServiceAbstract
{
    /**
     * @param LoggerInterface               $logger
     * @param <MODELCLASS>RepositoryInterface $repository
     */
    public function __construct(
        LoggerInterface $logger,
        <MODELCLASS>RepositoryInterface $repository
    ) {
        $this->logger     = $logger;
        $this->repository = $repository;
    }
}
